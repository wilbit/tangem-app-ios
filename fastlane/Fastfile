# Constants
APPNAME = "TangemLite"

before_all do |lane, options|
  # "Run bootstrap on buildBeta and buildAppStore lanes"
  case lane
  when :buildBeta, :buildAppStore
    sh("../bootstrap.sh")
  end
end

lane :buildAppStore do |options|
  increment_version_number(
  	version_number: options[:versionName]
  )

  increment_build_number(
    build_number: options[:versionCode]
  )

  suffix = "release"

  build_app(
    xcargs: "-allowProvisioningUpdates",
    output_name: APPNAME + "-" + suffix,
    scheme: "Tangem",
    export_method: "app-store",
    clean: true,
    silent: true,
    configuration: "Release"
  )

  upload_dsyms(name: suffix)
end

lane :buildBeta do |options|
  increment_version_number(
  	version_number: options[:versionName]
  )

  increment_build_number(
    build_number: options[:versionCode]
  )

  suffix = "beta"

  build_app(
    xcargs: "-allowProvisioningUpdates",
    output_name: APPNAME + "-" + suffix,
    scheme: "Tangem Beta",
    export_method: "app-store",
    clean: true,
    silent: true,
    configuration: "Release"
  )

  upload_dsyms(name: suffix)
end

# For upload dSym can call
# fastlane upload_dsyms name:release or
# fastlane upload_dsyms name:beta  
# for upload symbols from folder
lane :upload_dsyms do |options|
  name = options[:name]
  path = APPNAME + "-" + name + ".app.dSYM.zip"
  upload_symbols_to_crashlytics(dsym_path: path) 
  clean_build_artifacts
end

lane :test do
  run_tests(
    workspace: "TangemApp.xcworkspace",
    scheme: "Tangem",
    clean: true
  )
end

lane :refresh_dsyms do |options|
  download_dsyms(version: options[:version], build_number: options[:build_number]) 
  upload_symbols_to_crashlytics
  clean_build_artifacts
end